@charset "utf-8";
/* This CSS styles all form elements to specifications */
.right {
	align-self: flex-end;
}
.formContainer {
	max-width: 60%;
	margin: 0 auto;
	transition: all .2 ease-in-out;
}
.formItem {
	display: flex;
	justify-content: space-between;
	min-height: 35px;
	height: auto;
	background-color: #444444;
	border: 3px solid transparent;
	padding: 10px;
	margin: 0 0 10px 0;
	line-height: 35px;
	font-size: 21px;
	transition: all 0.1s ease-in-out;
	user-select: none;
}
.formItem:hover{ 	
	background-color: #555555;
	border-color: #777777;
	border-radius: 5px;
	box-shadow: 7px 7px 25px 10px #232323;
}


/* iOS Browser Resets */ 

input [type=text], input [type=button] {
	-webkit-appearance: none;
	-webkit-border-radius: 0;
	border-radius: 0;
}


/* TEXT INPUTS */


.formItem input[type=text]{
	width: 200px;
	outline: none;
	color: white;
	background: none;
	border: none;
	padding-left: 0.5rem;
	border-bottom: 3px solid #ffffff;
	border-radius: 0;
	transition: all 0.2s ease-in-out;
}
/* Adds a background color, expands the input and adds a blue border when focused */
.formItem input[type=text]:focus { 
	border-color: #0F4D8D;
	background: #333333;
	border-radius: 5px;
}


/* OTHER TEXT ENTRY */


.formItem input[type=password]{
	width: 200px;
	outline: none;
	color: white;
	background: none;
	padding-left: 0.5rem;
	border: none;
	border-bottom: 3px solid #ffffff;
	border-radius: 0;
	transition: all 0.2s ease-in-out;
}
/* Adds a background color, expands the input and adds a blue border when focused */
.formItem input[type=password]:focus {
	border-color: #0F4D8D;
	background: #333333;
}

.formItem input[type=email]{
	width: 200px;
	outline: none;
	color: white;
	background: none;
	border: none;
	padding-left: 0.5rem;
	border-bottom: 3px solid #ffffff;
	border-radius: 0;
	transition: all 0.2s ease-in-out;
}
/* Adds a background color, expands the input and adds a blue border when focused */
.formItem input[type=email]:focus {
	border-color: #0F4D8D;
	background: #333333;
}

.formItem textarea {
	font-family: 'Roboto';
	font-size: 16px;
	outline: none;
	color: white; 
	background: none;
	border: none; 
	resize: none;
	border-bottom: 3px solid #ffffff;
	border-radius: 0;
	transition: all 0.2s ease-in-out;
}

.formItem textarea:focus {
	background: #333;
	border-color: #0F4D9D;
	border-radius: 5px;
}


/* NUMBER INPUTS */


.formItem input[type=number]{
	width: 70px;
	outline: none;
	color: white;
	background: none;
	text-align: center;
	border: none;
	border-bottom: 3px solid #ffffff;
	border-radius: 0;
	font-size: 18px;
	transition: all 0.2s ease-in-out;
}
/* Adds a background color, expands the input and adds a blue border when focused */
.formItem input[type=number]:focus {
	border-color: #0F4D8D;
	background: #333333;
	border-radius: 5px;
}
/* Settings for if the input is set to read-only */
.formItem input[type=number]:read-only {
	user-select: none;
}
/* Adds a red background colour when the number input is invalid */
.formItem input[type=number]:invalid {
	background-color: #904444;
}
/* FOLLOWING CODE FIXES SOME ISSUES WITH THE NUMBER SPINNER */
/* Chrome, Safari, Edge, Opera */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* Firefox */
input[type=number] {
  -moz-appearance: textfield;
}


/* SELECT/DROPDOWNS */


.formItem select {
	min-width: 200px;
	color: white;
	background: none;
	background-color: transparent;
	border: none;
	border-bottom: 3px solid #ffffff;
	border-radius: 0;
	padding-left: 0.25rem;
	transition: all 0.2s ease-in-out;
}
/* Customizes the input when focused */
.formItem select:focus {
	background-color: #333333;
	border-color: #0F4D8D;
	border-radius: 5px;
}


/* RADIO BUTTONS */


.radioGroup {
	align-self: flex-end;
}
/* Setting up the radio button */
.radioGroup input[type=radio] {
	width: 30px;
	height: 30px;
	border-radius: 15px;
	border: 3px solid white;
	background-color: 0;
	-webkit-appearance: none; /*to disable the default appearance of radio */
	cursor: pointer;
	transition: all 0.2s ease-in-out;
}
/* Hover state for radio boxes" */

.radioGroup input[type=radio]:hover {
	background-color: #777;
}
/* Makes the background colour of the radio white when checked */
.radioGroup input[type=radio]:checked {
	background-color: white;
}
/* Sets the text (SPAN) in the radio to black when checked */
.radioGroup input[type=radio]:checked ~ span:first-of-type {
	color: #000000;
	font-weight: bolder;
}
/* Sets up the text (SPAN) in the radio */
.radioGroup label span:first-of-type {
	position: relative;
	left: -28px;
	font-size: 15px;
	color: white;
}
/* Sets up the text (SPAN) in the radio */
.radioGroup label span {
	position: relative;
	top: -10px;
	user-select: none;
	width: 5px;
	cursor: pointer;
}


/* CHECKBOX */


.checkContainer {
	display: block;
	position: relative;
	padding-right: 35px;
	margin-bottom: 12px;
	cursor: pointer;
	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
	transition: all 0.2s ease-in-out;
}
/* Hide the browser's default checkbox */
.checkContainer input {
	opacity: 0;
	cursor: pointer;
	height: 0;
	width: 0;
}
/* Create a custom checkbox */
.checkmark {
	position: absolute;
	right: 0;
	height: 26px;
	width: 26px;
	background-color: transparent;
	border: 3px solid white;
	border-radius: 25px;
	transition: all 0.2s ease-in-out;
}
/* When the checkbox is checked, background is white */
.checkContainer input:checked ~ .checkmark {
	background-color: white;
}
/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
	content: "";
	position: absolute;
	display: none;
}
/* Show the checkmark when checked */
.checkContainer input:checked ~ .checkmark:after {
	display: block;
}

/* Style the checkmark/indicator */
.checkContainer .checkmark:after {
	left: 9px;
	top: 5px;
	width: 5px;
	height: 10px;
	border: solid black;
	border-width: 0 3px 3px 0;
	-webkit-transform: rotate(45deg);
	-ms-transform: rotate(45deg);
	transform: rotate(45deg);
}
/* Additional properties for the last checkbox in the group */
.checkContainer:last-of-type {
	margin-bottom: 0;
}
/* Sets the checkbox border to grey if disabled. Unused for now */
.checkContainer input:disabled ~ .checkmark{
	background-color: transparent;
	border-color: grey;
	cursor: default;
}



/* INCREMENT AND DECREMENT BUTTON SECTIONS */


.formItem [type=button] {
	background: none;
	color: white;
	font-size: 21px;
	width: 30px;
	height: 30px;
	border: 3px solid white;
	border-radius: 0;
	border-radius: 50px;
	transition: all 0.1s ease-in-out;
	cursor: pointer;
	touch-action: manipulation; /* Stops iOS from zooming in when tapping repeatedly */
}
/* Sets the background and text colour in the button to white and black when clicked */
.formItem [type=button]:active {
	background-color: white;
	color: black;
}
/* Handles the wrapper of a set of buttons and number input */
.ticker {
	align-self: flex-end;
	height: inherit;
}
/* Sets an icon before the ticker container. Do not change (if you do you might break the whole thing) */
.goalIcon {
	height: 35px; position: relative; top: 10px; left: -5px
}

/* RESET BUTTON */ 

.formItem [type=reset] {
	background: none;
	color: white;
	font-size: 21px;
	width: 30px;
	height: 30px;
	border: 3px solid white;
	border-radius: 0;
	border-radius: 50px;
	transition: all 0.1s ease-in-out;
	cursor: pointer;
	touch-action: manipulation; /* Stops iOS from zooming in when tapping repeatedly */
}

.formItem [type=reset]:active {
	background-color: white;
	color: black;
}



/* RANGE SLIDER */


.formItem [type=range] { 
	/* Turns off the default look of the range slider */
	-webkit-appearance: none;
	margin-bottom: 15px;
	height: 5px;
	width: 200px;
	opacity: 0.75;
	transition: all 0.1s ease-in-out;
}
/* Makes the slider opaque when hovered on desktop. Has barely any effect on mobile */
.formItem [type=range]:hover {
	opacity: 1;
}
/* The next few classes gets rid of the browser's native slider controller and sets mine */
.formItem [type=range]::-webkit-slider-thumb {
	-webkit-appearance: none;
	appearance: none;
	width: 25px;
	height: 25px;
	border-radius: 50%;
	border: 3px solid white;
	background: #444444;
	cursor: pointer;
	transition: all 0.1s ease-in-out;
}
.formItem [type=range]::-moz-range-thumb {
	width: 25px;
	height: 25px;
	border-radius: 50%;
	border: 3px solid white;
	cursor: pointer;
}
.formItem [type=range]::-webkit-slider-thumb:hover {
	background-color: #ffffff;
}


/* SUBMIT BUTTON */


.formItem [type=submit] {
	background: none;
	border: none;
	color: white;
	font-size: 24px;
	font-weight: 1000;
	height: 60px;
	width: 100%;
	cursor: pointer;
}

.logoutbtn {
	flex-direction: column;
	background-color: #b32e2e;
	border: none;
	color: white;
	font-size: 24px;
	font-weight: 1000;
	height: 60px;
	cursor: pointer;
}

.logoutbtn:hover {
    box-shadow: 2px 5px 25px 2px #232323;
}


/* SOCIAL MEDIA ICONS ON SETTINGS PAGE */ 

.socialIcon {
    height: 35px;
    width: 35px;
    padding: 0px 10px;
}

/* REQUIRED */

.requiredField::after {
	content: "*";
	color: red;
}

/* TEXT HEADERS AND SUCH */ 

.sectionHeader {
	margin-top: 10%;
}


/* ID'S */


#submit {
	background-color: #0F4D8D;
}

#logout {
	background-color: darkred;
	text-align: center;
	color: white;
	font-weight: 900; 
	line-height: 4rem;
}

/* The Initiation Line image */
#autoStart_img {
	width: 200px;
}
	
/* Webkit Autofill Fixes */
	
input:-webkit-autofill,
input:-webkit-autofill:hover, 
input:-webkit-autofill:focus {
	border: none;
	border-bottom: 3px solid green;
	background-color: #0F4D8D;
    color: #ffffff;
	transition: background-color 5000s ease-in-out 0s;
}

/* More classes */

.icon {
	height: 35px; position: relative; top: 5px; left: -5px
}


	
	
	
/* For MOST tablets in landscape */

@media screen and (max-width: 1280px) {
	.formContainer {
		max-width: 100%
	}
	.formItem {
		min-height: 60px;
		line-height: 1em;
	}
	.formItem label {
		padding-top: 20px;
	}
	.goalIcon {
		height: 50px;
		top: 15px;
	}
	.icon {
		height: 50px;
		top: 0;
	}
	.formItem input[type=text], select {
		height: auto;
		font-size: 18px;
	}
	.formItem input[type=number] {
		font-size: 28px;
        align-self: flex-end;
	}
	.radioGroup {
		display: block
	}
	.radioGroup input[type=radio] {
		width: 50px;
		height: 50px;
		border-radius: 25px;
		border: 3px solid white;
		transition: all 0.3s ease-in-out;
	}
	.radioGroup label span:first-of-type {
  		position: relative;
		left: -41px;
 		font-size: 25px;
	}
	.radioGroup label span {
		position: relative;
		top: -16px;
		user-select: none;
		width: 5px;
	}
	.formItem [type=button] {
		font-size: 28px;
		width: 50px;
		height: 50px;
	}
	.formItem [type=range]::-webkit-slider-thumb:hover {
		background-color: #ffffff;
	}
	.checkContainer {
		margin-bottom: 20px;
		padding-right: 55px;
	}
	.checkContainer:last-of-type {
		margin-bottom: 15px;
	}
	.checkmark {
		top: 5px;
		width: 46px;
		height: 46px
	}
	.checkContainer .checkmark:after {
		left: 17px;
		top: 10px;
		width: 7px;
		height: 15px;
		border: solid black;
		border-width: 0 5px 5px 0;
	}
}

/* for mobile phones, portrait and landscape */

@media screen and (max-width: 820px) and (max-height: 860px) {
	.formContainer {
		max-width: 100%;
	}
	.formItem {
		flex-direction: column;
	}
	.formItem label {
		padding-bottom: 20px;
	}
	.formItem input[type=text], select {
		width: auto;
		height: auto;
		font-size: 21px;
	}
	.formItem input[type=text]:focus {
		width: auto;
	}
	.formItem input[type=password]:focus {
		width: auto;
	}
	.formItem input[type=range] {
		width: 100%;
	}
	.checkContainer {
		margin-bottom: 0px;
		padding-right: 55px;
	}
	#autoStart_img {
		height: auto;
		width: 100%;
	}
}