# Generated by Django 4.1.7 on 2024-02-19 21:56

import apps.entry.models
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organization', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_number', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(255), django.core.validators.MinValueValidator(-1)])),
                ('on_field', models.BooleanField(default=False)),
                ('preloaded_balls', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(3), django.core.validators.MinValueValidator(0)])),
                ('auto_start_x', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(1), django.core.validators.MinValueValidator(0)])),
                ('auto_start_y', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(1), django.core.validators.MinValueValidator(0)])),
                ('auto_placement', models.IntegerField(default=0)),
                ('auto_route', models.SmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(0)])),
                ('auto_fouls', models.SmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25), django.core.validators.MinValueValidator(0)])),
                ('auto_comment', models.TextField(default='')),
                ('auto_baseline', models.BooleanField(default=False)),
                ('auto_cones', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('auto_cubes', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('placement', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('cycles', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('intake_type', models.SmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('under_defense', models.SmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(0)])),
                ('defended_by', models.IntegerField(blank=True, default=0, null=True)),
                ('offensive_fouls', models.SmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25), django.core.validators.MinValueValidator(0)])),
                ('cones', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('cubes', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('defense_played', models.BooleanField(default=False)),
                ('defense_time', models.IntegerField(default=0)),
                ('defense_rating', models.SmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(0)])),
                ('defense_fouls', models.SmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(250), django.core.validators.MinValueValidator(0)])),
                ('team_defended', models.IntegerField(blank=True, default=0, null=True)),
                ('able_to_push', models.SmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(0)])),
                ('endgame_time', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(165), django.core.validators.MinValueValidator(0)])),
                ('endgame_action', models.SmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(0)])),
                ('endgame_attempts', models.IntegerField(default=0)),
                ('endgame_comments', models.TextField(default='')),
                ('fouls_hp', models.SmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(0)])),
                ('fouls_driver', models.SmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(0)])),
                ('yellow_card', models.BooleanField(default=False)),
                ('disabled', models.BooleanField(default=False)),
                ('yellow_card_description', models.TextField(default='')),
                ('scouter_name', models.TextField(default='')),
                ('comment', models.TextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('event', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='organization.event')),
                ('ownership', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='organization.organization')),
            ],
            options={
                'verbose_name_plural': 'Matches',
                'ordering': ['-match_number'],
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(9999), django.core.validators.MinValueValidator(0)])),
                ('name', models.CharField(default='team', max_length=100)),
                ('colour', models.CharField(default='#000000', max_length=7)),
                ('pick_status', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(2), django.core.validators.MinValueValidator(0)])),
                ('glance', models.FileField(blank=True, null=True, upload_to='json/')),
                ('avatar', models.CharField(default='NA', max_length=10000)),
                ('totalMatchesWon', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(9999), django.core.validators.MinValueValidator(0)])),
                ('totalMatchesLost', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(9999), django.core.validators.MinValueValidator(0)])),
                ('totalMatchesPlayed', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(9999), django.core.validators.MinValueValidator(0)])),
                ('winRate', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('eventsAttended', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, default='', max_length=6), default=list, size=None)),
                ('exists', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_number', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(255), django.core.validators.MinValueValidator(0)])),
                ('match_type', models.TextField(default='NA', max_length=40)),
                ('description', models.TextField(default='NA', max_length=100)),
                ('red1', models.IntegerField(default=0, verbose_name=apps.entry.models.Team)),
                ('red2', models.IntegerField(default=0, verbose_name=apps.entry.models.Team)),
                ('red3', models.IntegerField(default=0, verbose_name=apps.entry.models.Team)),
                ('blue1', models.IntegerField(default=0, verbose_name=apps.entry.models.Team)),
                ('blue2', models.IntegerField(default=0, verbose_name=apps.entry.models.Team)),
                ('blue3', models.IntegerField(default=0, verbose_name=apps.entry.models.Team)),
                ('red_score', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(9999), django.core.validators.MinValueValidator(0)])),
                ('blue_score', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(9999), django.core.validators.MinValueValidator(0)])),
                ('event', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='organization.event')),
            ],
            options={
                'verbose_name_plural': 'Schedule',
                'ordering': ['match_number'],
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed', models.BooleanField(default=False)),
                ('gouda', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(9999), django.core.validators.MinValueValidator(0)])),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organization.event')),
                ('match', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='entry.match')),
                ('ownership', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='organization.organization')),
                ('team', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='entry.team')),
            ],
        ),
        migrations.CreateModel(
            name='Pits',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drivetrain_style', models.TextField(default='')),
                ('drivetrain_wheels', models.TextField(default='')),
                ('drivetrain_motortype', models.TextField(default='')),
                ('drivetrain_motorquantity', models.SmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(0)])),
                ('drivetrain_speed', models.SmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(20), django.core.validators.MinValueValidator(0)])),
                ('drivetrain_transmission', models.TextField(default='')),
                ('auto_route', models.BooleanField(default=False)),
                ('auto_description', models.TextField(default='')),
                ('auto_scoring', models.SmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(3), django.core.validators.MinValueValidator(0)])),
                ('tele_scoring', models.SmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(3), django.core.validators.MinValueValidator(0)])),
                ('tele_positions', models.SmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(4), django.core.validators.MinValueValidator(0)])),
                ('weight', models.SmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(200), django.core.validators.MinValueValidator(0)])),
                ('scouter_name', models.TextField(default='')),
                ('event', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='organization.event')),
                ('ownership', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='organization.organization')),
                ('team', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='entry.team')),
            ],
            options={
                'verbose_name_plural': 'Pits',
                'ordering': ['team'],
            },
        ),
        migrations.AddField(
            model_name='match',
            name='team',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='entry.team'),
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default='/robots/default.jpg', upload_to='robots')),
                ('name', models.CharField(default='Wally', max_length=100)),
                ('ownership', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='entry.team')),
                ('team', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='entry.team')),
            ],
            options={
                'verbose_name_plural': 'Images',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qualification_rank', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(9999), django.core.validators.MinValueValidator(0)])),
                ('playoff_rank', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(9999), django.core.validators.MinValueValidator(0)])),
                ('event', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='organization.event')),
                ('team', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='entry.team')),
            ],
        ),
    ]
